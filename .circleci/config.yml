# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

executors:
  docker-executor:
    docker:
      - image: circleci/3.7.3-stretch


jobs:
  build:
    docker:
    # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  build-and-push:
    docker:
    # Use the same Docker base as the project
      - image: python:3.7.3-stretch
    steps:
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true
      - checkout
      - run:
          name: Install Docker
          command: |
            apt-get update -y
            apt-get install -y docker-ce
      - run:
          name: Login to Docker Hub
          command: echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
      - run:
          name: Build docker image
          command: |
            ./run_docker.sh
            docker images | grep "story-generator"
      - run:
          name: push docker image to docker hub
          command: |
            ./upload_docker.sh

workflows:
  version: 2
  default:
    jobs:
      - build
      - build-and-push:
          requires: [build]
          context: dockerhub
