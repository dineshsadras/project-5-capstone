# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

commands:
  destroy-environment:
    description: Destroy EKS cluster if the job fails
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            echo "Destroying EKS cluster and Network components "
            cd infrastructure/
            chmod u+x create-stack.sh   

            sh create-stack.sh delete eks-nodes
            sh create-stack.sh delete eks
            sh create-stack.sh delete network
jobs:
  build:
    docker:
    # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  build-and-push:
    docker:
    # Use the same Docker base as the project
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - run:
          name: Install docker and verify version
          command: |
            apk add docker-cli
                        
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true

      - run:
          name: Docker Version check
          command: docker version
        
      - run:
          name: Login to Docker Hub
          command: echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
      - run:
          name: Build docker image
          command: |
            chmod u+x run_docker.sh
            ./run_docker.sh
            docker images | grep "story-generator"
      - run:
          name: push docker image to docker hub
          command: |
            chmod u+x upload_docker.sh
            ./upload_docker.sh

  eks-cluster-nodes:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install tar and gzip
          command: |
            yum install -y tar
            yum install -y gzip
      - run:
          name: Deploy network, eks cluster and nodes
          command: |
            cd infrastructure/
            chmod u+x create-stack.sh
            sh create-stack.sh create network
            sh create-stack.sh create eks
            sh create-stack.sh create eks-nodes

      
      - destroy-environment

workflows:
  version: 2
  default:
    jobs:
      - eks-cluster-nodes
